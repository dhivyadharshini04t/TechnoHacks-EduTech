import java.util.Scanner;
class Main {
    private static final char EMPTY = ' ';
    private static final char X = 'X';
    private static final char O = 'O';
    private static char[][] board = {
        {EMPTY, EMPTY, EMPTY},
        {EMPTY, EMPTY, EMPTY},
        {EMPTY, EMPTY, EMPTY}
    };

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        char currentPlayer = X;
        boolean gameWon = false;
        boolean gameDraw = false;

        while (!gameWon && !gameDraw) {
            printBoard();
            playerMove(currentPlayer, scanner);
            gameWon = checkWinner(currentPlayer);
            gameDraw = checkDraw();
            currentPlayer = (currentPlayer == X) ? O : X;
        }

        printBoard();

        if (gameWon) {
            System.out.println("Player " + (currentPlayer == X ? O : X) + " wins!");
        } else {
            System.out.println("The game is a draw!");
        }

        scanner.close();
    }

    private static void printBoard() {
        for (int i = 0; i < 3; i++) {
            System.out.println(" " + board[i][0] + " | " + board[i][1] + " | " + board[i][2]);
            if (i < 2) System.out.println("---|---|---");
        }
    }

    private static void playerMove(char player, Scanner scanner) {
        int row = -1, col = -1;
        boolean validMove = false;

        while (!validMove) {
            System.out.println("Player " + player + ", enter your move (row [1-3] and column [1-3]): ");
            row = scanner.nextInt() - 1;
            col = scanner.nextInt() - 1;

            if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == EMPTY) {
                board[row][col] = player;
                validMove = true;
            } else {
                System.out.println("This move is not valid");
            }
        }
    }

    private static boolean checkWinner(char player) {
        // Check rows
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
                return true;
            }
        }
        // Check columns
        for (int i = 0; i < 3; i++) {
            if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
                return true;
            }
        }
        // Check diagonals
        if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
            return true;
        }
        if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
            return true;
        }
        return false;
    }

    private static boolean checkDraw() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == EMPTY) {
                    return false;
                }
            }
        }
        return true;
    }
}
